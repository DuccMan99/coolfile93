case 0x09: res="<span class=opcode>ADD</span>";
res += " <span class=register>" + REGISTER + "</span>,<span class=register>BC</span>";
break;
case 0x19: res="<span class=opcode>ADD</span>";
res += " <span class=register>" + REGISTER + "</span>,<span class=register>DE</span>";
break;
case 0x21: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTER + "</span>," + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + ""; address += 2;
break;
case 0x22: res="<span class=opcode>LD</span>";
res += " (" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + "),<span class=register>" + REGISTER + "</span>"; address += 2;
break;
case 0x23: res="<span class=opcode>INC</span>";
res += " <span class=register>" + REGISTER + "</span>";
break;
case 0x24: res="<span class=opcode>INC</span>";
res += " <span class=register>" + REGISTERH + "</span>";
break;
case 0x25: res="<span class=opcode>DEC</span>";
res += " <span class=register>" + REGISTERH + "</span>";
break;
case 0x26: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERH + "</span>,0x" + hexbyte(readbyte(address)) + ""; address += 1;
break;
case 0x29: res="<span class=opcode>ADD</span>";
res += " <span class=register>" + REGISTER + "</span>,<span class=register>" + REGISTER + "</span>";
break;
case 0x2a: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTER + "</span>,(" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + ")"; address += 2;
break;
case 0x2b: res="<span class=opcode>DEC</span>";
res += " <span class=register>" + REGISTER + "</span>";
break;
case 0x2c: res="<span class=opcode>INC</span>";
res += " <span class=register>" + REGISTERL + "</span>";
break;
case 0x2d: res="<span class=opcode>DEC</span>";
res += " <span class=register>" + REGISTERL + "</span>";
break;
case 0x2e: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERL + "</span>,0x" + hexbyte(readbyte(address)) + ""; address += 1;
break;
case 0x34: res="<span class=opcode>INC</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x35: res="<span class=opcode>DEC</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x36: res="<span class=opcode>LD</span>";
res += " (<span class=register>" + REGISTER + "</span>+dd),0x" + hexbyte(readbyte(address)) + ""; address += 1;
break;
case 0x39: res="<span class=opcode>ADD</span>";
res += " <span class=register>" + REGISTER + "</span>,<span class=register>SP</span>";
break;
case 0x44: res="<span class=opcode>LD</span>";
res += " <span class=register>B</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x45: res="<span class=opcode>LD</span>";
res += " <span class=register>B</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x46: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x4c: res="<span class=opcode>LD</span>";
res += " <span class=register>C</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x4d: res="<span class=opcode>LD</span>";
res += " <span class=register>C</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x4e: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x54: res="<span class=opcode>LD</span>";
res += " <span class=register>D</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x55: res="<span class=opcode>LD</span>";
res += " <span class=register>D</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x56: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x5c: res="<span class=opcode>LD</span>";
res += " <span class=register>E</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x5d: res="<span class=opcode>LD</span>";
res += " <span class=register>E</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x5e: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x60: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERH + "</span>,<span class=register>B</span>";
break;
case 0x61: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERH + "</span>,<span class=register>C</span>";
break;
case 0x62: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERH + "</span>,<span class=register>D</span>";
break;
case 0x63: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERH + "</span>,<span class=register>E</span>";
break;
case 0x64: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERH + "</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x65: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERH + "</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x66: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x67: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERH + "</span>,<span class=register>A</span>";
break;
case 0x68: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERL + "</span>,<span class=register>B</span>";
break;
case 0x69: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERL + "</span>,<span class=register>C</span>";
break;
case 0x6a: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERL + "</span>,<span class=register>D</span>";
break;
case 0x6b: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERL + "</span>,<span class=register>E</span>";
break;
case 0x6c: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERL + "</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x6d: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERL + "</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x6e: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x6f: res="<span class=opcode>LD</span>";
res += " <span class=register>" + REGISTERL + "</span>,<span class=register>A</span>";
break;
case 0x70: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + "),<span class=register>B</span>"; address += 1;
break;
case 0x71: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + "),<span class=register>C</span>"; address += 1;
break;
case 0x72: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + "),<span class=register>D</span>"; address += 1;
break;
case 0x73: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + "),<span class=register>E</span>"; address += 1;
break;
case 0x74: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + "),<span class=register>H</span>"; address += 1;
break;
case 0x75: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + "),<span class=register>L</span>"; address += 1;
break;
case 0x77: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + "),<span class=register>A</span>"; address += 1;
break;
case 0x7c: res="<span class=opcode>LD</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x7d: res="<span class=opcode>LD</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x7e: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x84: res="<span class=opcode>ADD</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x85: res="<span class=opcode>ADD</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x86: res="<span class=opcode>ADD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x8c: res="<span class=opcode>ADC</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x8d: res="<span class=opcode>ADC</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x8e: res="<span class=opcode>ADC</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x94: res="<span class=opcode>SUB</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x95: res="<span class=opcode>SUB</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x96: res="<span class=opcode>SUB</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x9c: res="<span class=opcode>SBC</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0x9d: res="<span class=opcode>SBC</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0x9e: res="<span class=opcode>SBC</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa4: res="<span class=opcode>AND</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0xa5: res="<span class=opcode>AND</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0xa6: res="<span class=opcode>AND</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xac: res="<span class=opcode>XOR</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0xad: res="<span class=opcode>XOR</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0xae: res="<span class=opcode>XOR</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb4: res="<span class=opcode>OR</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0xb5: res="<span class=opcode>OR</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0xb6: res="<span class=opcode>OR</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xbc: res="<span class=opcode>CP</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERH + "</span>";
break;
case 0xbd: res="<span class=opcode>CP</span>";
res += " <span class=register>A</span>,<span class=register>" + REGISTERL + "</span>";
break;
case 0xbe: res="<span class=opcode>CP</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xcb: return disassemble_DDFDCB(address);
case 0xe1: res="<span class=opcode>POP</span>";
res += " <span class=register>" + REGISTER + "</span>";
break;
case 0xe3: res="<span class=opcode>EX</span>";
res += " (<span class=register>SP</span>),<span class=register>" + REGISTER + "</span>";
break;
case 0xe5: res="<span class=opcode>PUSH</span>";
res += " <span class=register>" + REGISTER + "</span>";
break;
case 0xe9: res="<span class=opcode>JP</span>";
res += " <span class=register>" + REGISTER + "</span>";
break;
case 0xf9: res="<span class=opcode>LD</span>";
res += " <span class=register>SP</span>,<span class=register>" + REGISTER + "</span>";
break;
