case 0x40: res="<span class=opcode>IN</span>";
res += " <span class=register>B</span>,(<span class=register>C</span>)";
break;
case 0x41: res="<span class=opcode>OUT</span>";
res += " (<span class=register>C</span>),<span class=register>B</span>";
break;
case 0x42: res="<span class=opcode>SBC</span>";
res += " <span class=register>HL</span>,<span class=register>BC</span>";
break;
case 0x43: res="<span class=opcode>LD</span>";
res += " (" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + "),<span class=register>BC</span>"; address += 2;
break;
case 0x44:
case 0x4c:
case 0x54:
case 0x5c:
case 0x64:
case 0x6c:
case 0x74:
case 0x7c: res="<span class=opcode>NEG</span>";
break;
case 0x45:
case 0x4d:
case 0x55:
case 0x5d:
case 0x65:
case 0x6d:
case 0x75:
case 0x7d: res="<span class=opcode>RETN</span>";
break;
case 0x46:
case 0x4e:
case 0x66:
case 0x6e: res="<span class=opcode>IM</span>";
res += " 0";
break;
case 0x47: res="<span class=opcode>LD</span>";
res += " I,<span class=register>A</span>";
break;
case 0x48: res="<span class=opcode>IN</span>";
res += " <span class=register>C</span>,(<span class=register>C</span>)";
break;
case 0x49: res="<span class=opcode>OUT</span>";
res += " (<span class=register>C</span>),<span class=register>C</span>";
break;
case 0x4a: res="<span class=opcode>ADC</span>";
res += " <span class=register>HL</span>,<span class=register>BC</span>";
break;
case 0x4b: res="<span class=opcode>LD</span>";
res += " <span class=register>BC</span>,(" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + ")"; address += 2;
break;
case 0x4f: res="<span class=opcode>LD</span>";
res += " R,<span class=register>A</span>";
break;
case 0x50: res="<span class=opcode>IN</span>";
res += " <span class=register>D</span>,(<span class=register>C</span>)";
break;
case 0x51: res="<span class=opcode>OUT</span>";
res += " (<span class=register>C</span>),<span class=register>D</span>";
break;
case 0x52: res="<span class=opcode>SBC</span>";
res += " <span class=register>HL</span>,<span class=register>DE</span>";
break;
case 0x53: res="<span class=opcode>LD</span>";
res += " (" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + "),<span class=register>DE</span>"; address += 2;
break;
case 0x56:
case 0x76: res="<span class=opcode>IM</span>";
res += " 1";
break;
case 0x57: res="<span class=opcode>LD</span>";
res += " <span class=register>A</span>,I";
break;
case 0x58: res="<span class=opcode>IN</span>";
res += " <span class=register>E</span>,(<span class=register>C</span>)";
break;
case 0x59: res="<span class=opcode>OUT</span>";
res += " (<span class=register>C</span>),<span class=register>E</span>";
break;
case 0x5a: res="<span class=opcode>ADC</span>";
res += " <span class=register>HL</span>,<span class=register>DE</span>";
break;
case 0x5b: res="<span class=opcode>LD</span>";
res += " <span class=register>DE</span>,(" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + ")"; address += 2;
break;
case 0x5e:
case 0x7e: res="<span class=opcode>IM</span>";
res += " 2";
break;
case 0x5f: res="<span class=opcode>LD</span>";
res += " <span class=register>A</span>,R";
break;
case 0x60: res="<span class=opcode>IN</span>";
res += " <span class=register>H</span>,(<span class=register>C</span>)";
break;
case 0x61: res="<span class=opcode>OUT</span>";
res += " (<span class=register>C</span>),<span class=register>H</span>";
break;
case 0x62: res="<span class=opcode>SBC</span>";
res += " <span class=register>HL</span>,<span class=register>HL</span>";
break;
case 0x63: res="<span class=opcode>LD</span>";
res += " (" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + "),<span class=register>HL</span>"; address += 2;
break;
case 0x67: res="<span class=opcode>RRD</span>";
break;
case 0x68: res="<span class=opcode>IN</span>";
res += " <span class=register>L</span>,(<span class=register>C</span>)";
break;
case 0x69: res="<span class=opcode>OUT</span>";
res += " (<span class=register>C</span>),<span class=register>L</span>";
break;
case 0x6a: res="<span class=opcode>ADC</span>";
res += " <span class=register>HL</span>,<span class=register>HL</span>";
break;
case 0x6b: res="<span class=opcode>LD</span>";
res += " <span class=register>HL</span>,(" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + ")"; address += 2;
break;
case 0x6f: res="<span class=opcode>RLD</span>";
break;
case 0x70: res="<span class=opcode>IN</span>";
res += " <span class=register>F</span>,(<span class=register>C</span>)";
break;
case 0x71: res="<span class=opcode>OUT</span>";
res += " (<span class=register>C</span>),0";
break;
case 0x72: res="<span class=opcode>SBC</span>";
res += " <span class=register>HL</span>,<span class=register>SP</span>";
break;
case 0x73: res="<span class=opcode>LD</span>";
res += " (" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + "),<span class=register>SP</span>"; address += 2;
break;
case 0x78: res="<span class=opcode>IN</span>";
res += " <span class=register>A</span>,(<span class=register>C</span>)";
break;
case 0x79: res="<span class=opcode>OUT</span>";
res += " (<span class=register>C</span>),<span class=register>A</span>";
break;
case 0x7a: res="<span class=opcode>ADC</span>";
res += " <span class=register>HL</span>,<span class=register>SP</span>";
break;
case 0x7b: res="<span class=opcode>LD</span>";
res += " <span class=register>SP</span>,(" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + ")"; address += 2;
break;
case 0xa0: res="<span class=opcode>LDI</span>";
break;
case 0xa1: res="<span class=opcode>CPI</span>";
break;
case 0xa2: res="<span class=opcode>INI</span>";
break;
case 0xa3: res="<span class=opcode>OUTI</span>";
break;
case 0xa8: res="<span class=opcode>LDD</span>";
break;
case 0xa9: res="<span class=opcode>CPD</span>";
break;
case 0xaa: res="<span class=opcode>IND</span>";
break;
case 0xab: res="<span class=opcode>OUTD</span>";
break;
case 0xb0: res="<span class=opcode>LDIR</span>";
break;
case 0xb1: res="<span class=opcode>CPIR</span>";
break;
case 0xb2: res="<span class=opcode>INIR</span>";
break;
case 0xb3: res="<span class=opcode>OTIR</span>";
break;
case 0xb8: res="<span class=opcode>LDDR</span>";
break;
case 0xb9: res="<span class=opcode>CPDR</span>";
break;
case 0xba: res="<span class=opcode>INDR</span>";
break;
case 0xbb: res="<span class=opcode>OTDR</span>";
break;
