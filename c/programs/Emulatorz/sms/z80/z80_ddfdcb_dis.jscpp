case 0x00: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RLC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x01: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RLC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x02: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RLC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x03: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RLC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x04: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RLC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x05: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RLC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x06: res="<span class=opcode>RLC</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x07: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RLC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x08: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RRC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x09: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RRC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x0a: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RRC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x0b: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RRC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x0c: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RRC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x0d: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RRC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x0e: res="<span class=opcode>RRC</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x0f: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RRC (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x10: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x11: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x12: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x13: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x14: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x15: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x16: res="<span class=opcode>RL</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x17: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x18: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RR (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x19: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RR (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x1a: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RR (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x1b: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RR (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x1c: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RR (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x1d: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RR (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x1e: res="<span class=opcode>RR</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x1f: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RR (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x20: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SLA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x21: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SLA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x22: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SLA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x23: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SLA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x24: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SLA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x25: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SLA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x26: res="<span class=opcode>SLA</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x27: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SLA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x28: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SRA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x29: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SRA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x2a: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SRA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x2b: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SRA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x2c: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SRA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x2d: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SRA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x2e: res="<span class=opcode>SRA</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x2f: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SRA (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x30: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SLL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x31: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SLL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x32: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SLL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x33: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SLL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x34: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SLL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x35: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SLL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x36: res="<span class=opcode>SLL</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x37: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SLL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x38: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SRL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x39: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SRL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x3a: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SRL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x3b: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SRL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x3c: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SRL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x3d: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SRL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x3e: res="<span class=opcode>SRL</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x3f: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SRL (<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x40:
case 0x41:
case 0x42:
case 0x43:
case 0x44:
case 0x45:
case 0x46:
case 0x47: res="<span class=opcode>BIT</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x48:
case 0x49:
case 0x4a:
case 0x4b:
case 0x4c:
case 0x4d:
case 0x4e:
case 0x4f: res="<span class=opcode>BIT</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x50:
case 0x51:
case 0x52:
case 0x53:
case 0x54:
case 0x55:
case 0x56:
case 0x57: res="<span class=opcode>BIT</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x58:
case 0x59:
case 0x5a:
case 0x5b:
case 0x5c:
case 0x5d:
case 0x5e:
case 0x5f: res="<span class=opcode>BIT</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x60:
case 0x61:
case 0x62:
case 0x63:
case 0x64:
case 0x65:
case 0x66:
case 0x67: res="<span class=opcode>BIT</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x68:
case 0x69:
case 0x6a:
case 0x6b:
case 0x6c:
case 0x6d:
case 0x6e:
case 0x6f: res="<span class=opcode>BIT</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x70:
case 0x71:
case 0x72:
case 0x73:
case 0x74:
case 0x75:
case 0x76:
case 0x77: res="<span class=opcode>BIT</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x78:
case 0x79:
case 0x7a:
case 0x7b:
case 0x7c:
case 0x7d:
case 0x7e:
case 0x7f: res="<span class=opcode>BIT</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x80: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RES 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x81: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RES 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x82: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RES 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x83: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RES 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x84: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RES 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x85: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RES 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x86: res="<span class=opcode>RES</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x87: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RES 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x88: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RES 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x89: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RES 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x8a: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RES 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x8b: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RES 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x8c: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RES 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x8d: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RES 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x8e: res="<span class=opcode>RES</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x8f: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RES 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x90: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RES 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x91: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RES 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x92: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RES 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x93: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RES 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x94: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RES 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x95: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RES 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x96: res="<span class=opcode>RES</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x97: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RES 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x98: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RES 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x99: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RES 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x9a: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RES 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x9b: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RES 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x9c: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RES 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x9d: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RES 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x9e: res="<span class=opcode>RES</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x9f: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RES 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa0: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RES 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa1: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RES 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa2: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RES 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa3: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RES 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa4: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RES 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa5: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RES 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa6: res="<span class=opcode>RES</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa7: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RES 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa8: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RES 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa9: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RES 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xaa: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RES 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xab: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RES 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xac: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RES 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xad: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RES 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xae: res="<span class=opcode>RES</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xaf: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RES 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb0: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RES 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb1: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RES 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb2: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RES 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb3: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RES 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb4: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RES 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb5: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RES 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb6: res="<span class=opcode>RES</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb7: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RES 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb8: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,RES 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb9: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,RES 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xba: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,RES 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xbb: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,RES 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xbc: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,RES 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xbd: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,RES 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xbe: res="<span class=opcode>RES</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xbf: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,RES 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xc0: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SET 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xc1: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SET 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xc2: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SET 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xc3: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SET 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xc4: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SET 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xc5: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SET 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xc6: res="<span class=opcode>SET</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xc7: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SET 0,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xc8: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SET 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xc9: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SET 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xca: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SET 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xcb: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SET 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xcc: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SET 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xcd: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SET 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xce: res="<span class=opcode>SET</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xcf: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SET 1,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xd0: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SET 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xd1: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SET 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xd2: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SET 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xd3: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SET 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xd4: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SET 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xd5: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SET 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xd6: res="<span class=opcode>SET</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xd7: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SET 2,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xd8: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SET 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xd9: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SET 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xda: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SET 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xdb: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SET 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xdc: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SET 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xdd: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SET 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xde: res="<span class=opcode>SET</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xdf: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SET 3,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xe0: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SET 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xe1: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SET 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xe2: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SET 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xe3: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SET 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xe4: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SET 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xe5: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SET 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xe6: res="<span class=opcode>SET</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xe7: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SET 4,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xe8: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SET 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xe9: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SET 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xea: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SET 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xeb: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SET 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xec: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SET 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xed: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SET 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xee: res="<span class=opcode>SET</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xef: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SET 5,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xf0: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SET 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xf1: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SET 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xf2: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SET 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xf3: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SET 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xf4: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SET 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xf5: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SET 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xf6: res="<span class=opcode>SET</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xf7: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SET 6,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xf8: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>B</span>,SET 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xf9: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>C</span>,SET 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xfa: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>D</span>,SET 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xfb: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>E</span>,SET 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xfc: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>H</span>,SET 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xfd: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>L</span>,SET 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xfe: res="<span class=opcode>SET</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xff: res="<span class=opcode>LD</span>";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " <span class=register>A</span>,SET 7,(<span class=register>" + REGISTER + "</span>" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
